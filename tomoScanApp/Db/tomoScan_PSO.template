# Database for EPICS PVS for tomography data collection software using the Aerotech
# PSO output from the rotation stage as a detector trigger.

################
# PSO parameters
################

record(mbbo, "$(P)$(R)PSOControllerModel") 
{
    field(DESC, "Aerotech controller model")
    field(ZRVL, "0")
    field(ZRST, "Ensemble")
    field(ONVL, "1")
    field(ONST, "A3200")
    field(VAL,  "$(PSO_MODEL)")
}

record(ai, "$(P)$(R)PSOStartTaxi") 
{
    field(DESC, "Start position with taxi")
    field(EGU,  "degrees")
    field(PREC, "5")
}

record(ai, "$(P)$(R)PSOEndTaxi") 
{
    field(DESC, "End position with taxi")
    field(EGU,  "degrees")
    field(PREC, "5")
}

record(longout, "$(P)$(R)PSOEncoderPulsesPerStep") 
{
    field(DESC, "Encoder pulses per projection")
    field(VAL,  "6400")
    field(DRVL, "0")
    field(DRVH, "$(PSO_ENC_PER_ROTATION)")
}

record(asyn, "$(P)$(R)PSOCommand")
{
    field(PORT, "$(PSO_PORT)")
    field(ADDR, "0")
    field(OMAX, "256")
    field(IMAX, "256")
    field(OFMT, "Hybrid")
    field(IFMT, "Hybrid")
    field(TMOD, "Write/Read")
}

record(stringout, "$(P)$(R)PSOAxisName")
{
    field(VAL,  "$(PSO_AXIS_NAME)")
}

record(ao, "$(P)$(R)PSOPulsesPerRotation") 
{
    field(DESC, "Number of encoder counts per revolution")
    field(VAL,  "$(PSO_ENC_PER_ROTATION)")
    field(DRVL, "0")
    field(DRVH, "1000000000")
}

record(longout, "$(P)$(R)PSOEncoderInput") 
{
    field(DESC, "Encoder input")
    field(VAL,  "$(PSO_ENC_INPUT)")
    field(DRVL, "0")
    field(DRVH, "4")
}

